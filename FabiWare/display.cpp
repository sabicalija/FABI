/* 
     Flexible Assistive Button Interface (FABI) - AsTeRICS Foundation - http://www.asterics-foundation.org
     for controlling HID functions via momentary switches and/or serial AT-commands  
     More Information: https://github.com/asterics/FABI

     Module: display.cpp - I2C display control
        
     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License, see:
     http://www.gnu.org/licenses/gpl-3.0.en.html

*/

#include "fabi.h"
#include "display.h"
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
/**
   @name initDisplay
   @param none
   @return none

   initialize LC-Display and display FABI Logo 
*/
void initDisplay(){

      // Select the font to use with menu and all font functions
      // Note the the font selection heavily influences program memory utilisation!
      
#if defined(ARDUINO_AVR_MICRO)
      //ssd1306_setFixedFont(ssd1306xled_font6x8);
      ssd1306_setFixedFont(ssd1306xled_font8x16);

      ssd1306_128x32_i2c_init();
      ssd1306_clearScreen();

      //ssd1306_print("Normal text");
      ssd1306_drawXBitmap(36, 0, 55, 32, FABIlogo);
#elif defined(ARDUINO_NANO_RP2040_CONNCET)
    #define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
    #define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
    Adafruit_SSD1306 display(128, 32, &Wire, OLED_RESET); 
    #define LOGO_HEIGHT   32
    #define LOGO_WIDTH    55
    const uint8_t logo_bmp[] PROGMEM =
{   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x80, 
  0x00, 0x00, 0x00, 0x00, 0x10, 0xf8, 0xc0, 
  0x00, 0x00, 0x00, 0x00, 0x23, 0x06, 0x20, 
  0x00, 0x00, 0x00, 0x00, 0x4c, 0x01, 0x90, 
  0x00, 0x00, 0x00, 0x00, 0x98, 0x00, 0xd0, 
  0x00, 0x00, 0x00, 0x00, 0x90, 0x70, 0x48, 
  0x00, 0x00, 0x00, 0x01, 0x20, 0x78, 0x28, 
  0x00, 0x00, 0x00, 0x01, 0x23, 0x78, 0x24, 
  0x00, 0x00, 0x00, 0x01, 0x47, 0xb0, 0x34, 
  0x00, 0x00, 0x00, 0x01, 0x47, 0xf6, 0x14, 
  0x00, 0x00, 0x00, 0x01, 0x03, 0x7f, 0x14, 
  0x00, 0x00, 0x00, 0x01, 0x00, 0x6f, 0x34, 
  0x00, 0x00, 0x00, 0x01, 0x00, 0xe0, 0x24, 
  0x00, 0x00, 0x00, 0x01, 0x01, 0xf0, 0x28, 
  0x3f, 0xc1, 0x80, 0x7f, 0x86, 0xe0, 0x68, 
  0x7f, 0x83, 0x81, 0xf1, 0x86, 0x40, 0x48, 
  0x30, 0x03, 0x80, 0xe1, 0x8e, 0x00, 0x90, 
  0x60, 0x06, 0xc0, 0xc3, 0x8c, 0x03, 0x20, 
  0x60, 0x06, 0xc0, 0xc7, 0x0c, 0x3e, 0x60, 
  0x67, 0x8c, 0x60, 0xdf, 0x0c, 0x00, 0xc0, 
  0x7f, 0x9c, 0x60, 0xdb, 0x8e, 0x07, 0x00, 
  0x70, 0x1f, 0xe0, 0xc1, 0x8d, 0xfc, 0x00, 
  0x60, 0x3f, 0x30, 0xc1, 0x8c, 0x00, 0x00, 
  0x60, 0x30, 0x30, 0xc3, 0x8c, 0x00, 0x00, 
  0x60, 0x60, 0x39, 0x87, 0x0c, 0x00, 0x00, 
  0x60, 0x60, 0x1d, 0xbe, 0x0c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,   };
#endif
}

/**
   @name writeSlot2Display
   @param none
   @return none

   writes the slot number and BT/USB mode indicator to the LCD
*/
void writeSlot2Display(){ 
#if defined(ARDUINO_AVR_MICRO)
  ssd1306_clearScreen();

  for(uint8_t i=0; i < actSlot; i++)
    ssd1306_printFixed(i*10, 0, "*", STYLE_NORMAL);

  switch(settings.bt){
    case 3:  ssd1306_printFixed(60, 0, "(USB+BT)", STYLE_NORMAL);  break;
    case 1:  ssd1306_printFixed(85, 0, "(USB)", STYLE_NORMAL);  break;
    case 2:  ssd1306_printFixed(90, 0, "(BT)", STYLE_NORMAL);  break;
  }
  ssd1306_printFixed(0, 20, settings.slotname, STYLE_NORMAL);
#elif defined(ARDUINO_NANO_RP2040_CONNCET)
  display.display();
   display.clearDisplay();

  for(uint8_t i=0; i < actSlot; i++)
    display.setTextSize(2);             // Normal 1:1 pixel scale
    display.setCursor(0,0);             // Start at top-left corner
    display.setTextColor(SSD1306_WHITE);        // Draw white text
    display.println(F("*"));

  switch(settings.bt){
    case 3: 
              display.setCursor(60,0);
              display.println("USB+BT");  break;
    case 1:   display.setCursor(85,0);
              display.println("USB");  break;
    case 2:   display.setCursor(90,0);
              display.println("BT");  break;
  }
 ssd1306_printFixed(0, 20, settings.slotname, STYLE_NORMAL);
#endif
}
